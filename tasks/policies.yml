- block:

  - name: Create {{ item.name }} policy file
    copy:
      content: "{{ item.rules }}"
      dest: "{{ consul_config_dir }}/policies/{{ item.name }}.hcl"

  - name: Create Consul Policy {{ item.name }}
    command: consul acl policy create -name "{{ item.name }}" -description "{{ item.description | default(item.name) }}" -rules @{{ consul_config_dir }}/policies/{{ item.name }}.hcl
    ignore_errors: true
    environment: 
      CONSUL_HTTP_TOKEN: "{{ CONSUL_HTTP_TOKEN }}"
      CONSUL_CACERT: "{{ consul_config_dir }}/certs/consul-agent-ca.pem"
      CONSUL_HTTP_ADDR: "https://127.0.0.1:8501"
    register: policy_create
    become_user: "{{ consul_user }}"
    changed_when: policy_create.rc == 0

  - name: set consul token create command
    set_fact:
      consul_token_create_command: 'consul acl token create -policy-name {{ item.name }} -description "{{ item.description | default(item.name) }}"'

  - name: add node identity to consul token create command
    set_fact:
      consul_token_create_command: "{{ consul_token_create_command }} -node-identity {{ item.node }}"
    when: item.node is defined and item.node is not ''

  - name: Create Consul {{ item.name }} Token
    command: "{{ consul_token_create_command }}"
    args:
      creates: "{{ consul_config_dir }}/policies/{{ item.name }}.token"
    become_user: "{{ consul_user }}"
    environment: 
      CONSUL_HTTP_TOKEN: "{{ CONSUL_HTTP_TOKEN }}"
      CONSUL_CACERT: "{{ consul_config_dir }}/certs/consul-agent-ca.pem"
      CONSUL_HTTP_ADDR: "https://127.0.0.1:8501"
    register: policy_token

  - name: Write Consul {{ item.name }} Token
    copy:
      content: "{{ policy_token.stdout }}"
      dest: "{{ consul_config_dir }}/policies/{{ item.name }}.token"
      force: false
      owner: "{{ consul_user }}"
      group: "{{ consul_group }}"
    when: policy_token is success

  - name: Fetch Consul {{ item.name }} Token in the ansible-master
    fetch:
      src: "{{ consul_config_dir }}/policies/{{ item.name }}.token"
      dest: "{{ consul_fetch_dir }}/certs/"
      flat: yes

  when: consul_master

- name: Wait {{ item.name }} token to be generated
  wait_for:
    path: "{{ consul_fetch_dir }}/certs/{{ item.name }}.token"
  delegate_to: localhost

- name: Get ACL {{ item.name }} Token
  set_fact:
    token: "{{ lookup('file', consul_fetch_dir + '/certs/{{ item.name }}.token')| regex_search(regexp,'\\1') | first }}"
  vars:
    regexp: 'SecretID:\s+(.*)'
  delegate_to: localhost

- name: Add Token to consul_tokens
  set_fact:
    consul_tokens: "{{ consul_tokens | combine ({ item.name : token }) }}"